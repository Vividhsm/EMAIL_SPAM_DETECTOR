# -*- coding: utf-8 -*-
"""EMAIL_SPAM_DETCTOR.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1O3eT9WhbyHFZywrMdEJNoM2bVwC-6PKZ
"""

import pandas as pd
from sklearn.metrics import accuracy_score,confusion_matrix
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.preprocessing import LabelEncoder

df = pd.read_csv('/content/spam.csv',encoding = "ISO-8859-1")

df

df = df[['v1','v2']]
df.columns = ['Category','Message']
df

df.groupby('Category').describe()

encoder = LabelEncoder()
df['Category'] = encoder.fit_transform(df['Category'])
df

from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(df.Message, df.Category, test_size=0.2)

from sklearn.feature_extraction.text import CountVectorizer

vec = CountVectorizer()
x_train_count = vec.fit_transform(x_train.values)
x_train_count.toarray()

from sklearn.naive_bayes import MultinomialNB

model = MultinomialNB()
model.fit(x_train_count, y_train)

x_test_count = vec.transform(x_test)
accuracy = model.score(x_test_count,y_test)
print(f'accuracy of the model: {accuracy*100:2f} % ')

def predict():
    message = input('enter the message to predict:')
    message = [message]
    vector = vec.transform(message)
    if (model.predict(vector)==1):
      print("SPAM EMAIL")
    else:
      print("NOT SPAM")

predict()